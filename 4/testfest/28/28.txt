(testing /course/cs4500f22/ta/github/mactaggartt-rodriguezdia/4/xstate)
(testing /course/cs4500f22/ta/github/4/28/Tests/0-in.json /course/cs4500f22/ta/github/4/28/Tests/0-out.json)
Traceback (most recent call last):
  File "/usr/lib64/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib64/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/course/cs4500f22/ta/github/mactaggartt-rodriguezdia/Maze/Common/stateSerializer.py", line 59, in <module>
    print(main())
  File "/course/cs4500f22/ta/github/mactaggartt-rodriguezdia/Maze/Common/stateSerializer.py", line 38, in main
    previous_move = make_previous_move(json_obj_list[0]['last'])
  File "/course/cs4500f22/ta/github/mactaggartt-rodriguezdia/Maze/Common/stateSerializer.py", line 24, in make_previous_move
    return prev_move[0], get_direction_from_direction_str(prev_move[1])
TypeError: 'NoneType' object is not subscriptable
---------------------------------
(*** score 0)
(*** on)
'(#hasheq((board
           .
           #hasheq((connectors
                    .
                    (("┼" "┼" "┼" "┼" "┼" "┼" "┼")
                     ("┼" "┼" "┼" "┼" "┼" "┼" "┼")
                     ("┼" "┼" "┼" "┼" "┼" "┼" "┼")
                     ("┼" "┼" "┼" "┼" "┼" "┼" "┼")
                     ("┼" "┼" "┼" "┼" "┼" "┼" "┼")
                     ("┼" "┼" "┼" "┼" "┼" "┼" "┼")
                     ("┼" "┼" "┼" "┼" "┼" "┼" "┼")))
                   (treasures
                    .
                    ((("alexandrite" "pink-emerald-cut")
                      ("alexandrite" "pink-opal")
                      ("alexandrite" "pink-round")
                      ("alexandrite" "pink-spinel-cushion")
                      ("alexandrite" "purple-cabochon")
                      ("alexandrite" "purple-oval")
                      ("alexandrite" "purple-spinel-trillion"))
                     (("amethyst" "pink-emerald-cut")
                      ("amethyst" "pink-opal")
                      ("amethyst" "pink-round")
                      ("amethyst" "pink-spinel-cushion")
                      ("amethyst" "purple-cabochon")
                      ("amethyst" "purple-oval")
                      ("amethyst" "purple-spinel-trillion"))
                     (("ametrine" "pink-emerald-cut")
                      ("ametrine" "pink-opal")
                      ("ametrine" "pink-round")
                      ("ametrine" "pink-spinel-cushion")
                      ("ametrine" "purple-cabochon")
                      ("ametrine" "purple-oval")
                      ("ametrine" "purple-spinel-trillion"))
                     (("ammolite" "pink-emerald-cut")
                      ("ammolite" "pink-opal")
                      ("ammolite" "pink-round")
                      ("ammolite" "pink-spinel-cushion")
                      ("ammolite" "purple-cabochon")
                      ("ammolite" "purple-oval")
                      ("ammolite" "purple-spinel-trillion"))
                     (("apatite" "pink-emerald-cut")
                      ("apatite" "pink-opal")
                      ("apatite" "pink-round")
                      ("apatite" "pink-spinel-cushion")
                      ("apatite" "purple-cabochon")
                      ("apatite" "purple-oval")
                      ("apatite" "purple-spinel-trillion"))
                     (("aplite" "pink-emerald-cut")
                      ("aplite" "pink-opal")
                      ("aplite" "pink-round")
                      ("aplite" "pink-spinel-cushion")
                      ("aplite" "purple-cabochon")
                      ("aplite" "purple-oval")
                      ("aplite" "purple-spinel-trillion"))
                     (("aquamarine" "pink-emerald-cut")
                      ("aquamarine" "pink-opal")
                      ("aquamarine" "pink-round")
                      ("aquamarine" "pink-spinel-cushion")
                      ("aquamarine" "purple-cabochon")
                      ("aquamarine" "purple-oval")
                      ("aquamarine" "purple-spinel-trillion"))))))
          (last . null)
          (plmt
           .
           (#hasheq((color . "purple")
                    (current . #hasheq((column# . 1) (row# . 1)))
                    (home . #hasheq((column# . 1) (row# . 1))))))
          (spare
           .
           #hasheq((1-image . "citrine")
                   (2-image . "citrine")
                   (tilekey . "│"))))
  2
  "UP"
  180)
(*** expected)
'((#hasheq((column# . 0) (row# . 0))
   #hasheq((column# . 1) (row# . 0))
   #hasheq((column# . 2) (row# . 0))
   #hasheq((column# . 3) (row# . 0))
   #hasheq((column# . 4) (row# . 0))
   #hasheq((column# . 5) (row# . 0))
   #hasheq((column# . 6) (row# . 0))
   #hasheq((column# . 0) (row# . 1))
   #hasheq((column# . 1) (row# . 1))
   #hasheq((column# . 2) (row# . 1))
   #hasheq((column# . 3) (row# . 1))
   #hasheq((column# . 4) (row# . 1))
   #hasheq((column# . 5) (row# . 1))
   #hasheq((column# . 6) (row# . 1))
   #hasheq((column# . 0) (row# . 2))
   #hasheq((column# . 1) (row# . 2))
   #hasheq((column# . 2) (row# . 2))
   #hasheq((column# . 3) (row# . 2))
   #hasheq((column# . 4) (row# . 2))
   #hasheq((column# . 5) (row# . 2))
   #hasheq((column# . 6) (row# . 2))
   #hasheq((column# . 0) (row# . 3))
   #hasheq((column# . 1) (row# . 3))
   #hasheq((column# . 2) (row# . 3))
   #hasheq((column# . 3) (row# . 3))
   #hasheq((column# . 4) (row# . 3))
   #hasheq((column# . 5) (row# . 3))
   #hasheq((column# . 6) (row# . 3))
   #hasheq((column# . 0) (row# . 4))
   #hasheq((column# . 1) (row# . 4))
   #hasheq((column# . 2) (row# . 4))
   #hasheq((column# . 3) (row# . 4))
   #hasheq((column# . 4) (row# . 4))
   #hasheq((column# . 5) (row# . 4))
   #hasheq((column# . 6) (row# . 4))
   #hasheq((column# . 0) (row# . 5))
   #hasheq((column# . 1) (row# . 5))
   #hasheq((column# . 2) (row# . 5))
   #hasheq((column# . 3) (row# . 5))
   #hasheq((column# . 4) (row# . 5))
   #hasheq((column# . 5) (row# . 5))
   #hasheq((column# . 6) (row# . 5))
   #hasheq((column# . 0) (row# . 6))
   #hasheq((column# . 1) (row# . 6))
   #hasheq((column# . 2) (row# . 6))
   #hasheq((column# . 3) (row# . 6))
   #hasheq((column# . 4) (row# . 6))
   #hasheq((column# . 5) (row# . 6))
   #hasheq((column# . 6) (row# . 6))))
(*** but received)
'(((plain fast with-newline plain-unicode) ()))


(testing /course/cs4500f22/ta/github/4/28/Tests/2-in.json /course/cs4500f22/ta/github/4/28/Tests/2-out.json)
(testing /course/cs4500f22/ta/github/4/28/Tests/3-in.json /course/cs4500f22/ta/github/4/28/Tests/3-out.json)
((/course/cs4500f22/ta/github/4/28/Tests/2-in.json /course/cs4500f22/ta/github/4/28/Tests/2-out.json) (/course/cs4500f22/ta/github/4/28/Tests/3-in.json /course/cs4500f22/ta/github/4/28/Tests/3-out.json))
((passed 2) (total 3) (partial-score 2))

